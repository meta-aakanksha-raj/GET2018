#Q1
DROP FUNCTION IF EXISTS COUNT_NO_OF_ORDERS_IN;
DELIMITER $$
CREATE FUNCTION COUNT_NO_OF_ORDERS_IN ( Month INT  ,  Year INT)
RETURNS INT
BEGIN
DECLARE TotalCount INT;
SELECT  COUNT(ORDERS.OrderID) AS Total_Orders  INTO TotalCount FROM
ORDERS 
WHERE MONTH(ORDERS.PlacedDate) = Month AND YEAR(ORDERS.PlacedDate) = Year;
RETURN (TotalCount);
END
$$

select COUNT_NO_OF_ORDERS_IN(12,2018);

#Q2
DROP FUNCTION IF EXISTS MONTH_HAVING_MAXIMUM_ORDERS;
DELIMITER $$
CREATE FUNCTION MONTH_HAVING_MAXIMUM_ORDERS (Year INT)
RETURNS INT
BEGIN
DECLARE MaximumOrderMonth INT;
SELECT MONTH(L.PlacedDate) AS Max_Month INTO MaximumOrderMonth FROM 
(SELECT t.PlacedDate, MAX(t.Total_Orders) AS Order_Counts FROM 
(SELECT PlacedDate,COUNT(ORDERS.OrderID) AS Total_Orders FROM ORDERS
WHERE YEAR(ORDERS.PlacedDate) = Year
GROUP BY MONTH(ORDERS.PlacedDate)) as t) as L;
RETURN (MaximumOrderMonth);
END
$$

SELECT MONTH_HAVING_MAXIMUM_ORDERS(2018);